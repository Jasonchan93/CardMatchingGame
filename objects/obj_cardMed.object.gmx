<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_card_backM</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>type = "null";
flipped = true; //Set the cards to show = true
cardFade = false; //Made card disapear if match found
alarm[1] = room_speed * global.set_preview_time ; //wait 2 seconds and then run alarm 1
gotoscore = false;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_goto(GameFinishedMed);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string> flipped = false; //set cards to show = false (show ?)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (global.match [0,1])
{
    flipped = false; //flip the card back over
}
with (global.match [1,1])
{
    flipped = false;
}

global.selectionNumber = 0; //reset

global.match[0,0] = "null"; //Array of cards
global.match[0,1] = 999;
global.match[1,0] = "null"
global.match[1,1] = 999;
                
global.can_select = true;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (cardFade == true)
 {
    image_alpha-=0.05
 }

if (image_alpha &lt;=0)
 {
    instance_destroy();
 }
 

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.can_select == true)
{

                       

    if (flipped == false)
    {
        flipped = true;
        
        global.selectionNumber++; // increment selection number
        
        
        global.match[global.selectionNumber-1,0] = type;
        global.match[global.selectionNumber-1,1] = id;
        
        if(global.selectionNumber == 2)
        {
        
            global.can_select = false;
            global.flipAttempts++; //increment flip attempts
            
           
            
            if (global.match[0,0] == global.match[1,0]) //Match has been found
            {
                cardFade = true; //If the card matches, fade FIRST selected card
                with (global.match[0,1])
                {
                    cardFade = true; //If the card matches, fade the SECOND selected card
                    flipped = true;
                }
                global.selectionNumber = 0; //reset the selection number

                global.match[0,0] = "null"; //Array of cards
                global.match[0,1] = 999;
                global.match[1,0] = "null"
                global.match[1,1] = 999;
                
                global.can_select = true; //User can now select cards
                
                global.Allfound++;
                global.flipAttemptsRemaining--;
            }
            
            
            else
            {
                alarm[0] = room_speed * 0.8; //if it's not a match, show card from room speed x 0.8 seconds
                
            }//else
            
            
        }//if
    }//if
    
//if (global.Allfound == 5 )
//{
//   alarm[2] = room_speed * 0.8;
//}  

// if (gotoscore == true)
//  {
//  gotoscore = true;
  
//   room_goto(GameFinished)
//  }
    
   // if (finishGame == true)
   // {
    //    room_goto(GameFinished)  
   // }
}//if

if (global.Allfound == 10 )
{

                 alarm[2] = room_speed * 0.8;
                 room_goto(GameFinishedMed);
   
}


//Flip bonus calculation - Med

if (global.flipAttempts &gt; 0 &amp;&amp; global.flipAttempts &lt;=5)
{
    global.flipBonus = 500;
}
else if (global.flipAttempts &gt;5 &amp;&amp; global.flipAttempts &lt;=6)
{
    global.flipBonus = 400;
}
else if (global.flipAttempts &gt;6 &amp;&amp; global.flipAttempts &lt;=8)
{
    global.flipBonus = 200;
}
else if (global.flipAttempts &gt;8 &amp;&amp; global.flipAttempts &lt;=12)
{
    global.flipBonus = 100;
}
else if (global.flipAttempts &gt;12)
{
    global.flipBonus = 0;
}


//Time bonus - Med
if (global.minutes &lt;= 0 &amp;&amp; global.seconds &lt;=8)
{
    global.timeBonus = 500;
}
else if (global.minutes &lt;= 0 &amp;&amp; global.seconds &gt;8 &amp;&amp; global.seconds &lt;=12)
{
    global.timeBonus = 300;
}
else if (global.minutes &lt;= 0 &amp;&amp; global.seconds &gt;12 &amp;&amp; global.seconds &lt;=19 )
{
    global.timeBonus = 200;
}
else if (global.minutes &lt;= 0 &amp;&amp; global.seconds &gt;19 &amp;&amp; global.seconds &lt;=25 )
{
    global.timeBonus = 100;
}
else if (global.minutes &gt; 0 || global.seconds &gt;25)
{
    global.timeBonus = 0;
}




//Total score

global.totalScore = global.timeBonus+global.flipBonus+global.previewBonus;

score = global.totalScore;








</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (flipped ==true)
{
    switch(type)
    {
        case "C1":
            sprite = spr_card_1M;
        break ;
        
        case "C2":
            sprite = spr_card_2M;
        break ;
        
        case "C3":
            sprite = spr_card_3M;
        break ;
        
        case "C4":
            sprite = spr_card_4M;
        break ;
        
        case "C5":
            sprite = spr_card_5M;
        break ;
        
         case "C6":
            sprite = spr_card_6M;
        break ;
        
         case "C7":
            sprite = spr_card_7M;
        break ;
        
         case "C8":
            sprite = spr_card_8M;
        break ;
        
         case "C9":
            sprite = spr_card_9M;
        break ;
        
         case "C10":
            sprite = spr_card_10M;
        break ;
    
    }//switch
}//if

else
{
    sprite = spr_card_backM; //show background
}

draw_sprite(sprite, 0, x, y);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>114,114</point>
  </PhysicsShapePoints>
</object>
