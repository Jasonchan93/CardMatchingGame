<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Save</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>can_click = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="11">
      <action>
        <libid>1</libid>
        <id>541</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sprite_set</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>5</kind>
            <sprite>spr_Save</sprite>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="10">
      <action>
        <libid>1</libid>
        <id>541</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sprite_set</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>5</kind>
            <sprite>spr_Save2</sprite>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (can_click == true)
{
    can_click = false;
    
    //get a name from the user
    name = get_string_async("Enter your name:", "")
    get_name = false;   
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="63">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//listen for async dialog event

var i_d = ds_map_find_value(async_load, "id");

//if the dialog is the one where we ask the player for a name
if i_d == name
{
    if ds_map_find_value(async_load, "status") //if the user clicked ok
    {
        if ds_map_find_value(async_load, "result" ) != "" //if the name entered is not blank
        {
            global.name = ds_map_find_value(async_load, "result"); //get the name entered by user
            
//open scores.ini which is located at E:\CardMatchingGame
            ini_open("scores.ini")
            for (i = 0; i&lt;10; i++)
            {
                //fill the global scores array with values from the ini file. If no values are present, then fill with unknown and 0
                global.score_array[i, 0] = ini_read_string(string(i), "Name", "unknown");
                global.score_array[i, 1] = ini_read_real(string(i), "Score", 0);
            }
            ini_close();
            
//search for first spot where player's score is greater 
            for (i = 0; i&lt;10; i++)
            {
                //if the player's score is greater than the spot in question
                if (score &gt; global.score_array[i, 1])
                {
                    //starting at the last element of the array, set each element to the one before it.
                    for (j = 9; j&gt;i; j--)
                    {
                        global.score_array[j, 0] = global.score_array[j-1, 0];
                        global.score_array[j, 1] = global.score_array[j-1, 1];
                    }    
                
                    
                    //now set the space to that of this player
                    global.score_array[i, 0] = global.name;
                    global.score_array[i, 1] = score;
                    break;
                }
            }
            
//now update ini with this new array
            ini_open("scores.ini")
            for (i = 0; i&lt;10; i++)
            {
                ini_write_string(string(i), "Name", global.score_array[i, 0]);
                ini_write_real(string(i), "Score", global.score_array[i, 1]);
            }
            
            ini_close(); //don't forget to close the ini file
            
//go to the room where the high scores table is shown
            
            room_goto(GameScore);
            
            
           
            
        }
    }
    
    else//otherwise the user clicked cancel
    {
        room_goto(Menu1);//go back to main menu
    }
}
        
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
