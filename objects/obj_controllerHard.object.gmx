<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.selectionNumber = 0;

global.match[0,0] = "null"; //Array of cards
global.match[0,1] = 999;
global.match[1,0] = "null"
global.match[1,1] = 999;

global.Allfound = 0; //

global.can_select = true; //Allow user to see cards after flipping
global.flipAttempts = 0; //No. of cards flipped
global.flipAttemptsRemaining = 28;//No. of pairs remaining

width = 7;
height = 4;



//Card vars (13 in total)
C1Count = 0;
C2Count = 0;
C3Count = 0;
C4Count = 0;
C5Count = 0;

C6Count = 0;
C7Count = 0;
C8Count = 0;
C9Count = 0;
C10Count = 0;

C11Count = 0;
C12Count = 0;
C13Count = 0;
C14Count = 0;


//Co ords of where cards will be displayed
xx = 340;
yy = 60;

found = false; 

randomize (); //randomize seed
r = irandom (13); //0,1,2,3,4     ,5,6,7,8,9  10,11,12 13


for (var i = 0; i &lt; width; i++)
{
    for (var j = 0; j &lt; height; j++)
    {
        var card = instance_create(xx, yy, obj_cardHard) //Card var
        
        while (found == false)
        {
            switch(r)
            {
                case 0:                         //Case 0       - No. of cases = number of cards I have
                    if (C1Count &lt; 2)
                    {
                        card.type = "C1";
                        found = true;
                        C1Count++;
                    }
                    else
                    {
                        randomize ();
                        r = irandom (13);
                        found = false;
                    }
                break;
                
                
                case 1:                         //Case 1 
                    if (C2Count &lt; 2)
                    {
                        card.type = "C2";
                        found = true;
                        C2Count++;
                    }
                    else
                    {
                        randomize ();
                        r = irandom (13);
                        found = false;
                    }
                 break;
                
                 
                case 2:                         //Case 2 
                    if (C3Count &lt; 2)
                    {
                        card.type = "C3";
                        found = true;
                        C3Count++;
                    }
                    else
                    {
                        randomize ();
                        r = irandom (13);
                        found = false;
                    }
                break;
                
                
                case 3:                         //Case 3 
                    if (C4Count &lt; 2)
                    {
                        card.type = "C4";
                        found = true;
                        C4Count++;
                    }
                    else
                    {
                        randomize ();
                        r = irandom (13);
                        found = false;
                    }
                break;
                
                
                
                case 4:                         //Case 4 
                    if (C5Count &lt; 2)
                    {
                        card.type = "C5";
                        found = true;
                        C5Count++;
                    }
                    else
                    {
                        randomize ();
                        r = irandom (13);
                        found = false;
                    }
                break;
                
                 case 5:                         //Case 5 
                    if (C6Count &lt; 2)
                    {
                        card.type = "C6";
                        found = true;
                        C6Count++;
                    }
                    else
                    {
                        randomize ();
                        r = irandom (13);
                        found = false;
                    }
                break;
                
                
                  case 6:                         //Case 6 
                    if (C7Count &lt; 2)
                    {
                        card.type = "C7";
                        found = true;
                        C7Count++;
                    }
                    else
                    {
                        randomize ();
                        r = irandom (13);
                        found = false;
                    }
                break;
                
                  case 7:                         //Case 7 
                    if (C8Count &lt; 2)
                    {
                        card.type = "C8";
                        found = true;
                        C8Count++;
                    }
                    else
                    {
                        randomize ();
                        r = irandom (13);
                        found = false;
                    }
                break;
                
                
                  case 8:                         //Case 8
                    if (C9Count &lt; 2)
                    {
                        card.type = "C9";
                        found = true;
                        C9Count++;
                    }
                    else
                    {
                        randomize ();
                        r = irandom (13);
                        found = false;
                    }
                break;
                
                
                  case 9:                         //Case 9 
                    if (C10Count &lt; 2)
                    {
                        card.type = "C10";
                        found = true;
                        C10Count++;
                    }
                    else
                    {
                        randomize ();
                        r = irandom (13);
                        found = false;
                    }
                break;
                
                
                case 10:                         //Case 10
                    if (C11Count &lt; 2)
                    {
                        card.type = "C11";
                        found = true;
                        C11Count++;
                    }
                    else
                    {
                        randomize ();
                        r = irandom (13);
                        found = false;
                    }
                break;
                
                case 11:                         //Case 11
                    if (C12Count &lt; 2)
                    {
                        card.type = "C12";
                        found = true;
                        C12Count++;
                    }
                    else
                    {
                        randomize ();
                        r = irandom (13);
                        found = false;
                    }
                break;
                
                case 12:                         //Case 12
                    if (C13Count &lt; 2)
                    {
                        card.type = "C13";
                        found = true;
                        C13Count++;
                    }
                    else
                    {
                        randomize ();
                        r = irandom (13);
                        found = false;
                    }
                break;
                
                
                case 13:                         //Case 13
                    if (C14Count &lt; 2)
                    {
                        card.type = "C14";
                        found = true;
                        C14Count++;
                    }
                    else
                    {
                        randomize ();
                        r = irandom (13);
                        found = false;
                    }
                break;
                
            } //Switch
        }//While
        
            randomize ();
            r = irandom (13);
            found = false;
            yy += 150; //was 224
        
    }//For
    
    yy += 60;
    xx += 135;
    yy = 60;
    

    
}//For    
    
//Timer below

global.steps = 0;
global.seconds = 0;
global.minutes = 0;

global.draw_seconds="00";
global.draw_minutes="00";


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.steps+=1; // Add to the amount of time gone by (in steps)
global.minutes=floor((global.steps/room_speed)/60); // Figure out the minutes
global.seconds=floor(global.steps/room_speed)-(global.minutes*60); // Figure out the seconds

// Figure out the strings (so that numbers below 10 draw as 0X not just X)

//Minutes
if (global.minutes&lt;10) 
    {
        global.draw_minutes=string(global.minutes) 
        global.draw_minutes=string_insert("0",global.draw_minutes,0)
    }


else 
    {
         global.draw_minutes=string(global.minutes)
    }
    
    
//Seconds
if (global.seconds&lt;10) 
    {
        global.draw_seconds=string(global.seconds) 
        global.draw_seconds=string_insert("0",global.draw_seconds,0)
    }

else 
    {
        global.draw_seconds=string(global.seconds)
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw the comparison array for testing
draw_set_font(fnt_playH);
draw_set_color(c_white);
//draw_text(50, 10, "Card 1 Type: " + string(global.match[0, 0]));
//draw_text(50, 25, "Card 1 id: " + string(global.match[0, 1]));
//draw_text(240, 10, "Card 2 Type: " + string(global.match[1, 0]));
//draw_text(240, 25, "Card 2 id: " + string(global.match[1, 1]));

//draw our flip attempts
draw_text(50, 250, "Time: " + global.draw_minutes+" : "+global.draw_seconds); // Draw time with a colon as a separator

draw_text(50, 370, "No. of pairs ")//Temp draw number of flip attemps     
draw_text(50, 410, "remaining: " +  string(global.flipAttemptsRemaining)); 

draw_text(50, 490, "No. of pair flip "); //Temp draw pairs found 
draw_text(50, 530, "attempts: " + string(global.flipAttempts)); //Temp draw pairs found


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
